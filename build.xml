<?xml version="1.0" encoding="UTF-8"?>

<!-- ////////////////////////////////////////////////////////////////////// -->
<!-- Copyright (c) 2002 by Naohide Sano, All rights reserved.               -->
<!--                                                                        -->
<!-- Written by Naohide Sano                                                -->
<!--                                                                        -->
<!-- vavi-sound                                                             -->
<!--                                                                        -->
<!-- @author	Naohide Sano                                                -->
<!-- @version	0.00	021105	nsano	initial version                     -->
<!--                                                                        -->
<!-- ////////////////////////////////////////////////////////////////////// -->

<project name="vavi-sound" default="run" basedir="."
         xmlns:artifact="urn:maven-artifact-ant">

  <path id="maven-ant-tasks.classpath">
    <fileset dir="${user.home}/lib/java/maven-ant-tasks">
      <include name="*.jar" />
    </fileset>
  </path>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
           classpathref="maven-ant-tasks.classpath" /> 

  <property environment="env"/>
  <property file="local.properties" />

  <xmlproperty file="pom.xml" />

  <!-- Path Definitions -->
  <path id="project.class.path">
    <fileset refid="maven-ant-tasks.dependency.fileset"/>
  </path>

  <!-- clean -->
  <target name="clean" description="Cleaning">
    <delete>
      <fileset dir="${javac.dest}">
        <include name="**/*" />
      </fileset>
      <fileset dir="${javac.dest.test}">
        <include name="**/*" />
      </fileset>
    </delete>
  </target>

  <!-- prepare -->
  <target name="prepare" description="Preparing">
    <artifact:pom file="pom.xml" id="maven.project"/>
    <artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset">
      <pom refid="maven.project"/>
    </artifact:dependencies>
  </target>

  <!-- javac all vavi -->
  <target name="compile" depends="prepare" description="Compiling">
    <javac debug="on" destdir="${javac.dest}"
           source="${project.build.plugins.plugin.configuration.source}"
           target="${project.build.plugins.plugin.configuration.target}"
           encoding="${project.build.plugins.plugin.configuration.encoding}">
      <classpath refid="project.class.path" />
      <include name="**/*.java" />
      <src path="${javac.source}" />
    </javac>

    <copy todir="${javac.dest}">
      <fileset dir="${javac.resource}">
        <include name="**/*" />
      </fileset>
    </copy>

    <javac debug="on" destdir="${javac.dest.test}"
           source="${project.build.plugins.plugin.configuration.source}"
           target="${project.build.plugins.plugin.configuration.target}"
           encoding="${project.build.plugins.plugin.configuration.encoding}">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
      </classpath>
      <include name="**/*.java" />
      <src path="${javac.source.test}" />
    </javac>

    <copy todir="${javac.dest.test}">
      <fileset dir="${javac.resource.test}">
        <include name="**/*" />
      </fileset>
    </copy>

    <native2ascii encoding="Windows-31J"
                  ext=".properties"
                  src="src/main/native2ascii"
                  dest="${javac.dest}" >
      <include name="**/*.properties" />
    </native2ascii>
  </target>

  <!-- jar -->
  <target name="package" depends="compile" description="Packaging">
    <jar jarfile="target/${project.artifactId}-${project.version}.jar">
      <fileset dir="${javac.dest}">
        <include name="**/*" />
      </fileset>
    </jar>
  </target>

  <!-- run -->
  <target name="run" depends="compile" description="divide wave into mld (tmp dir)">
    <delete dir="${vavi.sound.run.out}/${vavi.sound.run.type}" />
    <mkdir dir="${vavi.sound.run.out}/${vavi.sound.run.type}" />

    <java classname="vavi.sound.sampled.mfi.MfiAudioFileWriterTest" fork="yes">
      <classpath>
        <path refid="project.class.path"/>
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
        <pathelement location="etc/libmfi-klab.jar" />
      </classpath>
      <arg value="${vavi.sound.run.in}" />
      <arg value="${vavi.sound.run.out}" />
      <arg value="${vavi.sound.run.length}" />
      <arg value="${vavi.sound.run.base}" />
      <arg value="${vavi.sound.run.type}" />
      <arg value="${vavi.sound.run.null}" />
    </java>
  </target>

  <!-- play -->
  <target name="play" depends="compile" description="play mfi dir">
    <fileset dir="." id="mlds.path">
      <include name="${vavi.sound.play.mld_play}" />
    </fileset>
    <pathconvert pathsep=" " property="mld.files" refid="mlds.path"/>
    <property name="mld.files" value="${toString:mlds.path}" />

    <java classname="Test1" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <jvmarg value="-Djavax.sound.midi.Sequencer=#Real Time Sequencer" />
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
        <pathelement location="etc/libmfi-klab.jar" />
      </classpath>
      <arg line="${mld.files}" />
    </java>
  </target>

  <!-- mfi -->
  <target name="mfi" depends="compile" description="play mfi">
    <java classname="Test1" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <jvmarg value="-Djavax.sound.midi.Sequencer=#Real Time Sequencer" />
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
        <pathelement location="etc/libmfi-klab.jar" />
      </classpath>
      <arg value="${mld.file}" />
    </java>
  </target>

  <!-- play smaf -->
  <target name="smaf" depends="compile" description="play smaf">
    <java classname="Test2" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <jvmarg value="-Djavax.sound.midi.Sequencer=#Real Time Sequencer" />
      <jvmarg value="-Dfile.encoding=utf-8" />
      
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg value="${vavi.sound.play.smaf}" />
    </java>
  </target>

  <!-- smaf with voice -->
  <target name="smaf.v1" depends="compile" description="make smaf with voice spi">
    <delete dir="${vavi.sound.smaf.out}/mmf" />
    <mkdir dir="${vavi.sound.smaf.out}/mmf" />

    <java classname="vavi.sound.sampled.smaf.SmafAudioFileWriterTest" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <classpath>
        <path refid="project.class.path"/>
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg value="${vavi.sound.smaf.in}" />
      <arg value="${vavi.sound.smaf.out}" />
      <arg value="${vavi.sound.smaf.time}" />
      <arg value="${vavi.sound.smaf.base}" />
      <arg value="${vavi.sound.smaf.null}" />
    </java>
  </target>

  <!-- smaf with voice -->
  <target name="smaf.v2" depends="compile" description="make smaf with voice direct">
    <delete dir="${vavi.sound.smaf.out}/mmf" />
    <mkdir dir="${vavi.sound.smaf.out}/mmf" />

    <java classname="vavi.sound.sampled.smaf.DividedSmafWithVoiceMaker" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <classpath>
        <path refid="project.class.path"/>
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg line="-o ${vavi.sound.smaf.out}" />
      <arg line="-s ${vavi.sound.smaf.time}" />
      <arg line="-t ${vavi.sound.smaf.base}" />
      <arg line="-r ${vavi.sound.smaf.sampleRate}" />
      <arg value="${vavi.sound.smaf.in}" />
    </java>
  </target>

  <!-- play smaf -->
  <target name="play.2" depends="compile" description="play smaf">
    <fileset dir="." id="mmfs.path">
      <include name="${vavi.sound.play.mmf_play}" />
    </fileset>
    <pathconvert pathsep=" " property="mmf.files" refid="mmfs.path"/>
    <property name="mmf.files" value="${toString:mmfs.path}" />

    <java classname="Test2" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <jvmarg value="-Djavax.sound.midi.Sequencer=#Real Time Sequencer" />
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg line="${mmf.files}" />
    </java>
  </target>

  <!-- play pcm -->
  <target name="play.pcm" depends="compile" description="play pcm">
    <java classname="t150_4" fork="yes">
      <jvmarg value="-Djava.awt.headless=true" />
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg value="out.pcm" />
    </java>
  </target>

  <!-- findbugs -->
  <target name="findbugs" depends="compile">
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <findbugs home="${findbugs.home}"
              output="html"
              outputFile="tmp/findbugs.html"
              jvmargs="-Xmx512m -Dfile.encoding=utf-8">
      <auxClasspath refid="project.class.path" />
      <sourcePath path="${javac.source}" />
      <class location="${javac.dest}" />
    </findbugs>
  </target>

</project>
