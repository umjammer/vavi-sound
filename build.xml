<?xml version="1.0" encoding="Shift_JIS"?>

<!-- ////////////////////////////////////////////////////////////////////// -->
<!-- Copyright (c) 2002 by Naohide Sano, All rights reserved.               -->
<!--                                                                        -->
<!-- Written by Naohide Sano                                                -->
<!--                                                                        -->
<!-- vavi-sound                                                             -->
<!--                                                                        -->
<!-- @author	Naohide Sano                                                -->
<!-- @version	0.00	021105	nsano	initial version                     -->
<!--                                                                        -->
<!-- ////////////////////////////////////////////////////////////////////// -->

<project name="vavi-sound" default="run" basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <property file="local.properties" />

  <property name="dir.build" value="target/classes" />
  <property name="lib.dir" value="lib" />
	
  <!-- クラスパスの定義 -->
  <path id="project.class.path">
    <fileset dir="lib">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- clean -->
  <target name="clean" description="clean">
    <delete>
      <fileset dir="${dir.build}">
        <include name="**/*" />
      </fileset>
      <fileset dir="target/test-classes">
        <include name="**/*" />
      </fileset>
    </delete>
  </target>

  <!-- prepare -->
  <target name="prepare" description="ビルド環境の準備">
    <ivy:settings file="ivy-settings.xml" />
    <ivy:convertpom pomFile="pom.xml" ivyFile="ivy.xml" />
    <ivy:retrieve />
  </target>

  <!-- compile -->
  <target name="compile" depends="prepare" description="Compile">
    <javac debug="on" target="1.5" encoding="MS932" destdir="${dir.build}">
      <classpath refid="project.class.path" />
      <include name="**/*.java" />
      <src path="src/main/java" />
    </javac>

  	<copy todir="${dir.build}">
      <fileset dir="src/main/resources">
        <include name="**/*" />
      </fileset>
    </copy>

    <javac debug="on" target="1.5" encoding="MS932" destdir="target/test-classes">
      <classpath>
      	<path refid="project.class.path" />
        <pathelement location="${dir.build}" />
      </classpath>
      <include name="**/*.java" />
      <src path="src/test/java" />
    </javac>

    <copy todir="target/test-classes">
      <fileset dir="src/test/resources">
        <include name="**/*" />
      </fileset>
    </copy>

    <native2ascii encoding="Windows-31J"
                  ext=".properties"
                  src="src/main/native2ascii"
                  dest="${dir.build}" >
      <include name="**/*.properties" />
    </native2ascii>
  </target>

  <!-- jar -->
  <target name="packaging" depends="compile" description="パッケージング">
    <jar jarfile="target/vavi-sound.jar">
      <fileset dir="${dir.build}">
        <include name="**/*" />
      </fileset>
    </jar>
  </target>

  <!-- run -->
  <target name="run" depends="packaging" description="divide wave into mld (tmp dir)">
    <delete dir="${vavi.sound.run.out}/${vavi.sound.run.type}" />
    <mkdir dir="${vavi.sound.run.out}/${vavi.sound.run.type}" />

    <java classname="vavi.sound.sampled.mfi.MfiAudioFileWriter" fork="yes">
      <classpath>
        <path refid="project.class.path"/>
        <pathelement location="target/vavi-sound.jar" />
      </classpath>
      <arg value="${vavi.sound.run.in}" />
      <arg value="${vavi.sound.run.out}" />
      <arg value="${vavi.sound.run.length}" />
      <arg value="${vavi.sound.run.base}" />
      <arg value="${vavi.sound.run.type}" />
      <arg value="${vavi.sound.run.null}" />
    </java>
  </target>

  <!-- play -->
  <target name="play" depends="packaging" description="play mfi">
    <fileset dir="." id="mlds.path">
      <include name="${vavi.sound.play.mld_play}" />
    </fileset>
    <pathconvert pathsep=" " property="mld.files" refid="mlds.path"/>
    <property name="mld.files" value="${toString:mlds.path}" />
    <java classname="Test1" fork="yes">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${dir.build}" />
        <pathelement location="target/test-classes" />
        <pathelement location="etc/libmfi-klab.jar" />
      </classpath>
      <arg line="${mld.files}" />
    </java>
  </target>

  <!-- smaf with voice -->
  <target name="smaf" depends="packaging" description="smaf with voice spi">
    <delete dir="${vavi.sound.smaf.out}/mmf" />
    <mkdir dir="${vavi.sound.smaf.out}/mmf" />

    <java classname="vavi.sound.sampled.smaf.SmafAudioFileWriter" fork="yes">
      <classpath>
        <path refid="project.class.path"/>
        <pathelement location="target/vavi-sound.jar" />
      </classpath>
      <arg value="${vavi.sound.smaf.in}" />
      <arg value="${vavi.sound.smaf.out}" />
      <arg value="${vavi.sound.smaf.time}" />
      <arg value="${vavi.sound.smaf.base}" />
      <arg value="${vavi.sound.smaf.null}" />
    </java>
  </target>

  <!-- smaf with voice -->
  <target name="smaf.2" depends="packaging" description="smaf with voice direct">
    <delete dir="${vavi.sound.smaf.out}/mmf" />
    <mkdir dir="${vavi.sound.smaf.out}/mmf" />

    <java classname="vavi.sound.sampled.smaf.DividedSmafWithVoiceMaker" fork="yes">
      <classpath>
        <path refid="project.class.path"/>
        <pathelement location="target/vavi-sound.jar" />
      </classpath>
      <arg line="-o ${vavi.sound.smaf.out}" />
      <arg line="-s ${vavi.sound.smaf.time}" />
      <arg line="-t ${vavi.sound.smaf.base}" />
      <arg line="-r ${vavi.sound.smaf.sampleRate}" />
      <arg value="${vavi.sound.smaf.in}" />
    </java>
  </target>

  <!-- play smaf -->
  <target name="play.2" depends="packaging" description="play smaf">
    <fileset dir="." id="mmfs.path">
      <include name="${vavi.sound.play.mmf_play}" />
    </fileset>
    <pathconvert pathsep=" " property="mmf.files" refid="mmfs.path"/>
    <property name="mmf.files" value="${toString:mmfs.path}" />
    <java classname="Test2" fork="yes">
<jvmarg value="-Djava.awt.headless=true" />
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${dir.build}" />
        <pathelement location="target/test-classes" />
      </classpath>
      <arg line="${mmf.files}" />
    </java>
  </target>

  <!-- findbugs -->
  <target name="findbugs" depends="compile">
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <findbugs home="${findbugs.home}"
              output="xml"
              outputFile="tmp/findbugs.xml"
              jvmargs="-Xmx512m">
      <auxClasspath refid="project.class.path" />
      <sourcePath path="src/main/java" />
      <class location="${dir.build}" />
    </findbugs>
  </target>
  
</project>
